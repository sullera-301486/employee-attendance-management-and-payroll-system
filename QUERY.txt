USE dbEmployee;

USE dbEmployee;


CREATE TABLE Employee (
    EmployeeID INT PRIMARY KEY,
    Position VARCHAR(50),
    FullName VARCHAR(50),
    EmployeeSalary DECIMAL(18, 2),
    Birthdate DATE,
    Hire_Date DATE,
    Phone_Number VARCHAR(15), 
    Email VARCHAR(255), 
    Address TEXT,
    Worked_For VARCHAR(50),
    EmployeePassword NVARCHAR(256)
);


CREATE TABLE Admin (
    AdminID INT PRIMARY KEY,
	EmployeeID INT,
    Position VARCHAR(50),
    FullName VARCHAR(50),
    AdminSalary DECIMAL(18, 2),
    Birthdate DATE,
    Hire_Date DATE,
    Phone_Number VARCHAR(15), 
    Email VARCHAR(255), 
    Address TEXT,
    Worked_For VARCHAR(50),
    AdminPassword NVARCHAR(256),
	FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
);


CREATE TABLE AttendanceEmployee (
    AttendanceID INT PRIMARY KEY IDENTITY(1,1),
    EmployeeID INT,
    Date DATE,
    TimeIN TIME,
    TimeOut TIME,
    TotalHours INT, 
    FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
);


CREATE TABLE AttendanceAdmin (
    AttendanceID INT PRIMARY KEY IDENTITY(1,1),
    AdminID INT,
    Date DATE,
    TimeIN TIME,
    TimeOut TIME,
    TotalHours INT, 
    FOREIGN KEY (AdminID) REFERENCES Admin(AdminID)
);


CREATE TABLE Payroll (
    PayrollID INT PRIMARY KEY IDENTITY(1,1),
    EmployeeID INT NULL,
    AdminID INT NULL,
    GrossPay DECIMAL(18, 2),
    SSSDeduction DECIMAL(18, 2),
    PhilHealthDeduction DECIMAL(18, 2),
    PagIbigDeduction DECIMAL(18, 2),
    TotalDeduction DECIMAL(18, 2),
    NetPay DECIMAL(18, 2),
    FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID),
    FOREIGN KEY (AdminID) REFERENCES Admin(AdminID)
);

CREATE TABLE LeaveRequests (
    LeaveID INT PRIMARY KEY IDENTITY(1,1),
    EmployeeID INT,
    LeaveType VARCHAR(50),
    StartDate DATE,
    EndDate DATE,
    Status VARCHAR(20),
    FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
);


-----------------------------EMPLOYEE-------------------------------------------------------------------------------------------
INSERT INTO Employee (EmployeeID, Position, FullName, EmployeeSalary, EmployeePassword, Phone_Number, Email, Birthdate, Address, Hire_Date, Worked_For) VALUES 
(2001, 'Developer', 'Franz Deloritos', 50000, 'Deloritos', '09154375321', 'Deloritos@gmail.com', '2004-10-15', 'Angono', '2022-01-01', '2 year/s'),
(2002, 'Developer', 'Karl Fabon', 50000, 'Fabon', '09165975321', 'Fabon@gmail.com', '2003-10-24', 'Antipolo', '2023-02-02', '1 year/s'),
(2003, 'Accountant', 'Daniel Castillo', 45000, 'Castillo', '09165965471', 'Castillo@gmail.com', '2002-12-04', 'Cainta', '2023-02-02', '3 year/s'),
(2004, 'Designer', 'Marcus Verzo', 45000, 'Verzo', '09931575321', 'Verzo@gmail.com', '2003-11-08', 'Taytay', '2022-02-02', '2 year/s'),
(2005, 'Advertisment Advisor', 'Amer Maganggcong', 40000, 'Maganggcong', '09216345321', 'Maganggcong@gmail.com', '1995-09-30', 'Cainta', '2022-02-02', '2 year/s'),
(2006, 'Programmer', 'Yusoph Matuan', 50000, 'Matuan', '09939438321', 'Matuan@gmail.com', '2001-12-1', 'Cainta', '2022-12-1', '2 year/s'),
(2007, 'Developer', 'Charles Macaraig', 50000, 'Macaraig', '09939438321', 'Macaraig@gmail.com', '2003-11-10', 'Taytay', '2022-12-1', '2 year/s');


INSERT INTO Admin (AdminID, Position, FullName, AdminSalary, AdminPassword, Phone_Number, Email, Birthdate, Address, Hire_Date, Worked_For) VALUES 
(1001, 'CEO', 'EJ Sullera', 75000, 'Sullera', '09165975321','Sullera@gmail.com', '2002-02-08', 'Antipolo', '2019-01-01', '5 year/s'),
(1002, 'Manager', 'Nc Nemenzo', 75000, 'Nemenzo', '09125895321','Nemenzo@gmail.com', '2002-02-08', 'Taytay', '2021-01-01', '3 year/s');

---------------------------------------------------FULLNAME----------------------------------------------------------------
CREATE PROCEDURE AddAdmin
    @FullName VARCHAR(50),
    @Position VARCHAR(50),
    @Salary DECIMAL(18, 2),
    @Password VARCHAR(50)
AS
BEGIN
    DECLARE @HashedPassword NVARCHAR(256);
    SET @HashedPassword = CONVERT(NVARCHAR(256), HASHBYTES('SHA2_256', CONVERT(NVARCHAR(50), @Password)), 2);

    INSERT INTO Admin (FullName, Position, AdminSalary, AdminPassword)
    VALUES (@FullName, @Position, @Salary, @HashedPassword);

    SELECT SCOPE_IDENTITY() AS AdminID;
END;

CREATE PROCEDURE AddEmployee
    @FullName VARCHAR(50),
    @Position VARCHAR(50),
    @Salary DECIMAL(18, 2),
    @Password VARCHAR(50)
AS
BEGIN
    DECLARE @HashedPassword NVARCHAR(256);
    SET @HashedPassword = CONVERT(NVARCHAR(256), HASHBYTES('SHA2_256', CONVERT(NVARCHAR(50), @Password)), 2);

    INSERT INTO Employee (FullName, Position, EmployeeSalary, EmployeePassword)
    VALUES (@FullName, @Position, @Salary, @HashedPassword);

    SELECT SCOPE_IDENTITY() AS EmployeeID;
END;

----------------------------------------------------LOGIN----------------------------------------------------------------------
CREATE PROCEDURE AddEmployeeLogin
    @EmployeeID INT,
    @Password VARCHAR(50)
AS
BEGIN
    DECLARE @StoredPassword NVARCHAR(256);
    DECLARE @HashedPassword NVARCHAR(256);

    SELECT @StoredPassword = EmployeePassword
    FROM Employee
    WHERE EmployeeID = @EmployeeID;

    SET @HashedPassword = CONVERT(NVARCHAR(256), HASHBYTES('SHA2_256', CONVERT(NVARCHAR(50), @Password)), 2);

    IF @HashedPassword = @StoredPassword
    BEGIN
        PRINT 'Login successful.';
    END
    ELSE
    BEGIN
        PRINT 'Invalid password.';
    END
END;

CREATE PROCEDURE VerifyAdminLogin
    @AdminID INT,
    @Password VARCHAR(50)
AS
BEGIN
    DECLARE @StoredPassword NVARCHAR(256);
    DECLARE @HashedPassword NVARCHAR(256);

    SELECT @StoredPassword = AdminPassword
    FROM Admin
    WHERE AdminID = @AdminID;

    SET @HashedPassword = CONVERT(NVARCHAR(256), HASHBYTES('SHA2_256', CONVERT(NVARCHAR(50), @Password)), 2);

    IF @HashedPassword = @StoredPassword
    BEGIN
        PRINT 'Login successful.';
    END
    ELSE
    BEGIN
        PRINT 'Invalid password.';
    END
END;
----------------------------------------------------ATTENDACE AND PAYROLL----------------------------------------------------
CREATE PROCEDURE EmployeePayroll
    @EmployeeID INT
AS
BEGIN
    DECLARE @EmployeeSalary DECIMAL(18, 2);
    DECLARE @GrossPay DECIMAL(18, 2);
    DECLARE @HourlyRate DECIMAL(18, 2);
    DECLARE @DaysAttended INT;
    DECLARE @PaidLeaveDays INT;
    DECLARE @TotalHoursWorked INT;
    DECLARE @ExpectedHours INT = 176;
    DECLARE @SSSDeduction DECIMAL(18, 2);
    DECLARE @PhilHealthDeduction DECIMAL(18, 2);
    DECLARE @PagIbigDeduction DECIMAL(18, 2);
    DECLARE @TotalDeduction DECIMAL(18, 2);
    DECLARE @NetPay DECIMAL(18, 2);

    SELECT @EmployeeSalary = EmployeeSalary
    FROM Employee
    WHERE EmployeeID = @EmployeeID;

    SET @HourlyRate = @EmployeeSalary / @ExpectedHours;

    SELECT @DaysAttended = COUNT(DISTINCT Date)
    FROM AttendanceEmployee
    WHERE EmployeeID = @EmployeeID
      AND TimeIN IS NOT NULL
      AND TimeOut IS NOT NULL;

    SELECT @PaidLeaveDays = COUNT(DISTINCT StartDate)
    FROM LeaveRequests
    WHERE EmployeeID = @EmployeeID
      AND YEAR(StartDate) = YEAR(GETDATE())
      AND MONTH(StartDate) = MONTH(GETDATE())
      AND Status = 'Approved';

    SET @DaysAttended = @DaysAttended - @PaidLeaveDays;

    SELECT @TotalHoursWorked = SUM(DATEDIFF(MINUTE, TimeIN, TimeOut)) / 60
    FROM AttendanceEmployee
    WHERE EmployeeID = @EmployeeID;

    SET @TotalHoursWorked = @TotalHoursWorked - (@PaidLeaveDays * 8);

    SET @GrossPay = @TotalHoursWorked * @HourlyRate;

    SET @SSSDeduction = @GrossPay * 0.045;
    SET @PhilHealthDeduction = @GrossPay * 0.015;
    SET @PagIbigDeduction = @GrossPay * 0.004;

    SET @TotalDeduction = @SSSDeduction + @PhilHealthDeduction + @PagIbigDeduction;

    SET @NetPay = @GrossPay - @TotalDeduction;

    INSERT INTO Payroll (EmployeeID, GrossPay, SSSDeduction, PhilHealthDeduction, PagIbigDeduction, TotalDeduction, NetPay)
    VALUES (@EmployeeID, @GrossPay, @SSSDeduction, @PhilHealthDeduction, @PagIbigDeduction, @TotalDeduction, @NetPay);

    SELECT @DaysAttended AS DaysAttended,
           @PaidLeaveDays AS PaidLeaveDays,
           @TotalHoursWorked AS TotalHoursWorked,
           @GrossPay AS GrossPay,
           @SSSDeduction AS SSSDeduction,
           @PhilHealthDeduction AS PhilHealthDeduction,
           @PagIbigDeduction AS PagIbigDeduction,
           @TotalDeduction AS TotalDeduction,
           @NetPay AS NetPay;
END;



CREATE PROCEDURE AdminPayroll
    @AdminID INT
AS
BEGIN
    DECLARE @AdminSalary DECIMAL(18, 2);
    DECLARE @GrossPay DECIMAL(18, 2);
    DECLARE @HourlyRate DECIMAL(18, 2);
    DECLARE @DaysAttended INT;
    DECLARE @PaidLeaveDays INT;
    DECLARE @TotalHoursWorked INT;
    DECLARE @ExpectedHours INT = 176;
    DECLARE @SSSDeduction DECIMAL(18, 2);
    DECLARE @PhilHealthDeduction DECIMAL(18, 2);
    DECLARE @PagIbigDeduction DECIMAL(18, 2);
    DECLARE @TotalDeduction DECIMAL(18, 2);
    DECLARE @NetPay DECIMAL(18, 2);

    SELECT @AdminSalary = AdminSalary
    FROM Admin
    WHERE AdminID = @AdminID;

    SET @HourlyRate = @AdminSalary / @ExpectedHours;

    SELECT @DaysAttended = COUNT(DISTINCT Date)
    FROM AttendanceAdmin
    WHERE AdminID = @AdminID
      AND TimeIN IS NOT NULL
      AND TimeOut IS NOT NULL;

    SELECT @PaidLeaveDays = COUNT(DISTINCT Date)
    FROM AttendanceAdmin
    WHERE AdminID = @AdminID
      AND TimeIN IS NULL
      AND TimeOut IS NULL;

    SELECT @TotalHoursWorked = SUM(DATEDIFF(MINUTE, TimeIN, TimeOut)) / 60
    FROM AttendanceAdmin
    WHERE AdminID = @AdminID;

    SET @GrossPay = @TotalHoursWorked * @HourlyRate;

    SET @SSSDeduction = @GrossPay * 0.045;
    SET @PhilHealthDeduction = @GrossPay * 0.015;
    SET @PagIbigDeduction = @GrossPay * 0.004;

    SET @TotalDeduction = @SSSDeduction + @PhilHealthDeduction + @PagIbigDeduction;

    SET @NetPay = @GrossPay - @TotalDeduction;

    INSERT INTO Payroll (AdminID, GrossPay, SSSDeduction, PhilHealthDeduction, PagIbigDeduction, TotalDeduction, NetPay)
    VALUES (@AdminID, @GrossPay, @SSSDeduction, @PhilHealthDeduction, @PagIbigDeduction, @TotalDeduction, @NetPay);

    SELECT @DaysAttended AS DaysAttended,
           @PaidLeaveDays AS PaidLeaveDays,
           @TotalHoursWorked AS TotalHoursWorked,
           @GrossPay AS GrossPay,
           @SSSDeduction AS SSSDeduction,
           @PhilHealthDeduction AS PhilHealthDeduction,
           @PagIbigDeduction AS PagIbigDeduction,
           @TotalDeduction AS TotalDeduction,
           @NetPay AS NetPay;
END;

---------------------------------------------------------------LEAVE
CREATE PROCEDURE RequestLeave
    @EmployeeID INT,
    @LeaveType VARCHAR(50),
    @StartDate DATE,
    @EndDate DATE
AS
BEGIN
    DECLARE @LeaveCount INT;

    SELECT @LeaveCount = COUNT(*)
    FROM LeaveRequests
    WHERE EmployeeID = @EmployeeID
      AND YEAR(StartDate) = YEAR(@StartDate)
      AND MONTH(StartDate) = MONTH(@StartDate)
      AND Status = 'Approved';

    IF @LeaveCount >= 7
    BEGIN
        PRINT 'Leave limit for the month reached.';
        RETURN;
    END

    INSERT INTO LeaveRequests (EmployeeID, LeaveType, StartDate, EndDate, Status)
    VALUES (@EmployeeID, @LeaveType, @StartDate, @EndDate, 'Pending');
    
    PRINT 'Leave request submitted successfully.';
END;
