use dbEmployee;

CREATE TABLE Employee (
    EmployeeID Varchar(50) PRIMARY KEY,
    Position VARCHAR(50),
	FullName VARCHAR(50),
    EmployeeSalary DECIMAL(18, 2),
	birthdate nvarchar(15),
	hire_date nvarchar(15),
	phone_number NVARCHAR(15), 
	email NVARCHAR(255), 
	address TEXT,
	worked_for nvarchar(50),
    EmployeePassword NVARCHAR(256)
);

CREATE TABLE Admin (
    AdminID Varchar(50) PRIMARY KEY,
    Position VARCHAR(50),
	FullName VARCHAR(50),
    AdminSalary DECIMAL(18, 2),
	birthdate nvarchar(15),
	hire_date nvarchar(15),
	phone_number NVARCHAR(15), 
	email NVARCHAR(255), 
	address TEXT,
	worked_for nvarchar(50),
    AdminPassword NVARCHAR(256)
);

CREATE TABLE AttendanceAdmin (
    AttendanceID NVarchar(50) PRIMARY KEY,
    AdminID Varchar(50),
	Date date,
    TimeIN TIME,
    TimeOut TIME,
	TotalTime time,
    FOREIGN KEY (AdminID) REFERENCES Admin(AdminID)
);

CREATE TABLE AttendanceEmployee (
    EmployeeID Varchar(50)PRIMARY KEY,
    AdminID Varchar(50),
	Date date,
    TimeIN TIME,
    TimeOut TIME,
	TotalTime Time,
    FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID),
);

CREATE TABLE Payroll (
    PayrollId VARCHAR(50) PRIMARY KEY, 
    EmployeeID VARCHAR(50) NULL,
    AdminID VARCHAR(50) NULL,
    EmployeeSalary DECIMAL(18, 2) NULL,
    AdminSalary DECIMAL(18, 2) NULL,
    Deduction DECIMAL(18, 2) NULL,
    NetPay DECIMAL(18, 2) NULL,
	PayPeriod VARCHAR(7),
    FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID),
    FOREIGN KEY (AdminID) REFERENCES Admin(AdminID)
);
  
Insert into Employee (EmployeeId, Position, FullName, EmployeeSalary, EmployeePassword, phone_number, email, birthdate,  address, hire_date, worked_for) 
VALUES ('E01', 'Developer', 'Franz Deloritos', 50000, 'Deloritos', '09154375321',  'Deloritos@gmail.com', '2004-02-29','Angono', '2022-01-01', '2 year/s');
Insert into Employee (EmployeeId, Position, FullName, EmployeeSalary, EmployeePassword, phone_number, email, birthdate, address, hire_date, worked_for) 
Values ('E02', 'Developer', 'Karl Fabon', 50000, 'FABON', '09165975321', 'Fabon@gmail.com', '2003-10-24', 'Antipolo', '2023-02-02', '1 year/s');

Insert into Admin (AdminID, Position, FullName, AdminSalary, AdminPassword, phone_number, email, birthdate,  address, hire_date, worked_for)
VALUES ('1', 'CEO', 'EJ Sullera', 50000, 'Sullera1', '09165975321','Sullera@gmail.com', '2002-02-08', 'Antipolo', '2019-01-01', '5 year/s');


CREATE PROCEDURE AddAdmin
	@FullName VARCHAR(50),
    @Position VARCHAR(50),
    @Salary DECIMAL(18, 2),
    @Password VARCHAR(50)
AS
BEGIN

    DECLARE @HashedPassword NVARCHAR(256);

    SET @HashedPassword = CONVERT(NVARCHAR(256), HASHBYTES('SHA2_256', CONVERT(NVARCHAR(50), @Password)), 2);

    INSERT INTO Admin (FullName, Position, AdminSalary, AdminPassword)
    VALUES (@FullName, @Position, @Salary, @HashedPassword);

    SELECT SCOPE_IDENTITY() AS AdminID;
END;

CREATE PROCEDURE AddEmployee
    @FullName VARCHAR(50),
    @Position VARCHAR(50),
    @Salary DECIMAL(18, 2),
    @Password VARCHAR(50)
AS
BEGIN
    DECLARE @HashedPassword NVARCHAR(256);

    SET @HashedPassword = CONVERT(NVARCHAR(256), HASHBYTES('SHA2_256', CONVERT(NVARCHAR(50), @Password)), 2);

    INSERT INTO Employee (FullName, Position, EmployeeSalary, EmployeePassword)
    VALUES (@FullName, @Position, @Salary, @HashedPassword);

    SELECT SCOPE_IDENTITY() AS EmployeeID;
END;

CREATE PROCEDURE AddEmployeeLogin
    @EmployeeID INT,
    @Password VARCHAR(50)
AS
BEGIN
    DECLARE @StoredPassword NVARCHAR(256);
    DECLARE @HashedPassword NVARCHAR(256);

    SELECT @StoredPassword = EmployeePassword
    FROM Employee
    WHERE EmployeeID = @EmployeeID;

    SET @HashedPassword = CONVERT(NVARCHAR(256), HASHBYTES('SHA2_256', CONVERT(NVARCHAR(50), @Password)), 2);

    IF @HashedPassword = @StoredPassword
    BEGIN

        PRINT 'Login successful.';
    END
    ELSE
    BEGIN

        PRINT 'Invalid password.';
    END
END;


CREATE PROCEDURE VerifyAdminLogin
    @AdminID INT,
    @Password VARCHAR(50)
AS
BEGIN
    DECLARE @StoredPassword NVARCHAR(256);
    DECLARE @HashedPassword NVARCHAR(256);

    SELECT @StoredPassword = AdminPassword
    FROM Admin
    WHERE AdminID = @AdminID;

    SET @HashedPassword = CONVERT(NVARCHAR(256), HASHBYTES('SHA2_256', CONVERT(NVARCHAR(50), @Password)), 2);

    IF @HashedPassword = @StoredPassword
    BEGIN
        PRINT 'Login successful.';
    END
    ELSE
    BEGIN
        PRINT 'Invalid password.';
    END
END;


CREATE PROCEDURE RecordAttendance
    @UserID Varchar(50),
    @UserType Varchar(50),
    @TimeIn TIME,
    @TimeOut TIME
AS
BEGIN
    DECLARE @TotalTime TIME;
    DECLARE @Date DATE = CAST(GETDATE() AS DATE);

    SET @TotalTime = DATEADD(SECOND, DATEDIFF(SECOND, @TimeIn, @TimeOut), '00:00:00');

    IF @UserType = 'Admin'
    BEGIN
        INSERT INTO AttendanceAdmin (AttendanceID, AdminID, Date, TimeIN, TimeOut, TotalTime)
        VALUES (NEWID(), @UserID, @Date, @TimeIn, @TimeOut, @TotalTime);
    END
    ELSE IF @UserType = 'Employee'
    BEGIN
        INSERT INTO AttendanceEmployee (EmployeeID, AdminID, Date, TimeIN, TimeOut, TotalTime)
        VALUES (@UserID, @UserID, @Date, @TimeIn, @TimeOut, @TotalTime);
    END
    ELSE
    BEGIN
        PRINT 'Invalid UserType';
    END
END;


CREATE PROCEDURE EmployeePayroll
    @EmployeeID VARCHAR(50),
    @TotalDaysWorked INT,
    @AdminID VARCHAR(50)
AS
BEGIN
    DECLARE @EmployeeSalary DECIMAL(18, 2);
    DECLARE @GrossPay DECIMAL(18, 2);
    DECLARE @SSSDeduction DECIMAL(18, 2);
    DECLARE @PhilHealthDeduction DECIMAL(18, 2);
    DECLARE @PagIbigDeduction DECIMAL(18, 2);
    DECLARE @TotalDeduction DECIMAL(18, 2);
    DECLARE @NetPay DECIMAL(18, 2);
    DECLARE @PayPeriod VARCHAR(7);

    SELECT @EmployeeSalary = EmployeeSalary
    FROM Employee
    WHERE EmployeeID = @EmployeeID;

    SET @GrossPay = (@EmployeeSalary / 30) * @TotalDaysWorked;

    SET @SSSDeduction = @GrossPay * 0.045;    
    SET @PhilHealthDeduction = @GrossPay * 0.015;  
    SET @PagIbigDeduction = @GrossPay * 0.004;    

    SET @TotalDeduction = @SSSDeduction + @PhilHealthDeduction + @PagIbigDeduction;

    SET @NetPay = @GrossPay - @TotalDeduction;

    SET @PayPeriod = FORMAT(GETDATE(), 'yyyy-MM');

    INSERT INTO Payroll (PayrollId, EmployeeID, AdminID, EmployeeSalary, AdminSalary, Deduction, NetPay, PayPeriod)
    VALUES (NEWID(), @EmployeeID, @AdminID, @EmployeeSalary, NULL, @TotalDeduction, @NetPay, @PayPeriod);

    SELECT @GrossPay AS GrossPay,
           @SSSDeduction AS SSSDeduction,
           @PhilHealthDeduction AS PhilHealthDeduction,
           @PagIbigDeduction AS PagIbigDeduction,
           @TotalDeduction AS TotalDeduction,
           @NetPay AS NetPay;
END;


CREATE PROCEDURE AdminPayroll
    @AdminID VARCHAR(50),
    @TotalDaysWorked INT
AS
BEGIN
    DECLARE @AdminSalary DECIMAL(18, 2);
    DECLARE @GrossPay DECIMAL(18, 2);
    DECLARE @SSSDeduction DECIMAL(18, 2);
    DECLARE @PhilHealthDeduction DECIMAL(18, 2);
    DECLARE @PagIbigDeduction DECIMAL(18, 2);
    DECLARE @TotalDeduction DECIMAL(18, 2);
    DECLARE @NetPay DECIMAL(18, 2);
    DECLARE @PayPeriod VARCHAR(7);

    SELECT @AdminSalary = AdminSalary
    FROM Admin
    WHERE AdminID = @AdminID;

    SET @GrossPay = (@AdminSalary / 30) * @TotalDaysWorked;

    SET @SSSDeduction = @GrossPay * 0.045;    
    SET @PhilHealthDeduction = @GrossPay * 0.015;  
    SET @PagIbigDeduction = @GrossPay * 0.004;    

    SET @TotalDeduction = @SSSDeduction + @PhilHealthDeduction + @PagIbigDeduction;

    SET @NetPay = @GrossPay - @TotalDeduction;

    SET @PayPeriod = FORMAT(GETDATE(), 'yyyy-MM');

    INSERT INTO Payroll (PayrollId, EmployeeID, AdminID, EmployeeSalary, AdminSalary, Deduction, NetPay, PayPeriod)
    VALUES (NEWID(), NULL, @AdminID, NULL, @AdminSalary, @TotalDeduction, @NetPay, @PayPeriod);

    SELECT @GrossPay AS GrossPay,
           @SSSDeduction AS SSSDeduction,
           @PhilHealthDeduction AS PhilHealthDeduction,
           @PagIbigDeduction AS PagIbigDeduction,
           @TotalDeduction AS TotalDeduction,
           @NetPay AS NetPay;
END;






